# Создайте собственный класс-исключение, который должен проверять содержимое списка на наличие только чисел.
# Проверить работу исключения на реальном примере. Необходимо запрашивать у пользователя данные и заполнять список.
# Класс-исключение должен контролировать типы данных элементов списка. Примечание: длина списка не фиксирована.
# Элементы запрашиваются бесконечно, пока пользователь сам не остановит работу скрипта, введя, например,
# команду “stop”. При этом скрипт завершается, сформированный список выводится на экран. Подсказка: для данного
# задания примем, что пользователь может вводить только числа и строки. При вводе пользователем очередного элемента
# необходимо реализовать проверку типа элемента и вносить его в список, только если введено число. Класс-исключение
# должен не позволить пользователю ввести текст (не число) и отобразить соответствующее сообщение. При этом работа
# скрипта не должна завершаться.


class MyIsDigitError(Exception):
    def __init__(self, txt):
        """
        Not a number exception
        :param txt: str Input output message
        """
        self.txt = txt


a = None
my_list = []
while not a == 'q':
    a = input("Введите следующее значение списка или 'q' для вывода списка\n")
    try:
        if a.isdigit():
            a = int(a)
        elif a.split('.') and a.split('.')[0].isdigit() and a.split('.')[1].isdigit() and len(a.split('.')) < 3:
            a = float(a)
        else:
            raise MyIsDigitError('Вводить нужно только числа, не строки')
    except MyIsDigitError as e:
        print(e)
    else:
        my_list.append(a)
print(my_list)
